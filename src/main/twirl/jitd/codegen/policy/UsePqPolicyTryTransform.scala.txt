@import jitd.spec._
@import jitd.codegen._
@import jitd.Debug
@(ctx:Render, root:String, transform:String, onSuccess:String, onFail:String)

@debug(msg:String) = { @{Debug.println(Debug.Policy, "  ")(msg)} }
@dump = { @{Debug.dump(Debug.Policy, "  ")("target", "    ")} }

{
  @{ctx.cType(TNodeRef())} * targetHandleRef;
  
  //std::shared_ptr<JITDNode> target;
 
  long bestScore = searchFor@{transform}(
    targetHandleRef
  );
  
  if(bestScore >= 0) {
  
   
    @{transform}(targetHandleRef);
    #ifdef DEBUG
      check_pq();
    #endif
    @onSuccess
  } else { 
    @onFail 
  }







}


